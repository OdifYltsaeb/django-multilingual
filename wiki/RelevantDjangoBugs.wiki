#summary A list of Django bugs you are likely to run into when using django-multilingual
#labels Featured

== Admin: change_stage requires at least one editable field ==

If you create a model that has only translatable fields and try to edit or add instances via the admin interface you will see the following error:

{{{
 Traceback (most recent call last):
File "/usr/lib/python2.5/site-packages/django/core/handlers/base.py" in get_response
  77. response = callback(request, *callback_args, **callback_kwargs)
File "/usr/lib/python2.5/site-packages/django/contrib/admin/views/decorators.py" in _checklogin
  55. return view_func(request, *args, **kwargs)
File "/usr/lib/python2.5/site-packages/django/views/decorators/cache.py" in _wrapped_view_func
  39. response = view_func(request, *args, **kwargs)
File "/usr/lib/python2.5/site-packages/django/contrib/admin/views/main.py" in add_stage
  298. return render_change_form(model, manipulator, c, add=True)
File "/usr/lib/python2.5/site-packages/django/contrib/admin/views/main.py" in render_change_form
  196. first_form_field_id = bound_field_sets[0].bound_field_lines[0].bound_fields[0].form_fields[0].get_id();

  IndexError at (....)
  list index out of range 
}}}

*Details*: [http://code.djangoproject.com/ticket/3434 ticket #3434 on djangoproject.com]

*Patch*: available at the Django ticket page.

*Workaround*: add at least one editable, but not translatable field to the translatable model.  For example:

{{{
# this model will cause the error in admin interface

class Article(models.Model):

    class Translation(multilingual.Translation):
        title = models.CharField(maxlength=50)
        contents = models.TextField(blank=True)

# this model will show up correctly

class Article(models.Model):

    some_dummy_field = models.IntegerField()

    class Translation(multilingual.Translation):
        title = models.CharField(maxlength=50)
        contents = models.TextField(blank=True)
}}}

== QuerySet.select_related handles the depth parameter incorrectly ==

If you use select_related on a queryset of a translatable model and set a non-zero depth, you might get incorrect values in translatable fields.

*Details*: [http://code.djangoproject.com/ticket/3275#comment:15 ticket #3275 on djangoproject.com].  This was first reported by mchruszcz [http://code.google.com/p/django-multilingual/issues/detail?id=15 here].

*Patch*: available at the Django ticket page.

*Workaround*: do not use select_related this way until the problem gets fixed in Django.
